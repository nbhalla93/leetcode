class Solution:
    def numMatchingSubseq(self, S: str, words: List[str]) -> int:
        heads = [[] for i in range(26)]
        
        for word in words:
            heads[ord(word[0]) - ord('a')].append(word)
        
        count = 0
        for s in S:
            old_list = heads[ord(s) - ord('a')]
            heads[ord(s) - ord('a')] = []
            
            for word in old_list:
                if len(word) == 1:
                    count += 1
                else:
                    heads[ord(word[1]) - ord('a')].append(word[1:])
                
        return count        
