class Trie:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.map = {}
        self.endOfWord = False
      
        

    def insert(self, word: str) -> None:
        """
        Inserts a word into the trie.
        """
        current = self
        for c in word:
            if c not in current.map:
                node = Trie()
                current.map[c] = node
            current = current.map[c]
        current.endOfWord = True

    def search(self, word: str) -> bool:
        """
        Returns if the word is in the trie.
        """
        current = self
        for c in word:
            if not c in current.map:
                return False
            current = current.map[c]
        return current.endOfWord

        

    def startsWith(self, prefix: str) -> bool:
        """
        Returns if there is any word in the trie that starts with the given prefix.
        """
        current = self
        for c in prefix:
            if not c in current.map:
                return False
            current = current.map[c]
        return True

        
        


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)
