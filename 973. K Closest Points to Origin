class Solution:
    def dist(self, point):
        return point[0]**2 + point[1]**2
    
    def kClosest(self, points: List[List[int]], K: int) -> List[List[int]]:
        heap = [(-1*self.dist(point), point) for point in points[:K]]
        heapq.heapify(heap)
        
        for i in range(K, len(points)):
            d = self.dist(points[i])
            heapq.heappush(heap,(-d,points[i])) 
            heapq.heappop(heap)
        
        print(heap)
        return [heap[i][1] for i in range(K)]
