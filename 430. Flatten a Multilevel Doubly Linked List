"""
# Definition for a Node.
class Node:
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

class Solution:
    def flatten(self, head: 'Node') -> 'Node':
        stack = deque()
        
        node = head
        while stack or node:
            # if node and (node.next or node.child):
            if node.child:
                        if node.next:
                            stack.append(node.next)
                            node.next.prev = None

                        node.next = node.child
                        node.next.prev = node
                        node.child = None
            else:
                if not node.next and stack:
                    new_node = stack.pop()
                    node.next = new_node
                    new_node.prev = node
            
            node = node.next
        return head
                
        
