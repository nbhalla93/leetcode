# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def levelOrderBottom(self, root: TreeNode) -> List[List[int]]:
        if not root:
            return []
        
        stackList = deque([[root.val]])
        
        queue = deque([root, None])
        while queue:
            node = queue.popleft()
            if not queue and not node:
                break
                
            if node:
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            else:
                levelList = []
                for elem in queue:
                    levelList.append(elem.val)
                stackList.append(levelList)
                queue.append(None)
                
        finalList = []
        while stackList:
            finalList.append(stackList.pop()) 
        return finalList
