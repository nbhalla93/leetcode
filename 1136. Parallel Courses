class Solution:
    def minimumSemesters(self, N: int, relations: List[List[int]]) -> int:
        indegree = [0]*N
        outgoing = collections.defaultdict(list)
        for relation in relations:
            x = relation[0]
            y = relation[1]
            indegree[y-1] += 1
            outgoing[x].append(y)
            
        queue = collections.deque([])
        sem = 1
        for i in range(N):
            if indegree[i] == 0:
                queue.append((i+1,sem))
                
        removed_edges = 0
        while queue:
            node, level = queue.popleft()
            for out in outgoing[node]:
                removed_edges += 1
                indegree[out-1] -= 1
                if indegree[out-1] == 0:
                    queue.append((out, level+1))
        return level if removed_edges == len(relations) else -1
        
            
        
