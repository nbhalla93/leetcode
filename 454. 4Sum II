class Solution:
    def fourSumCount(self, A: List[int], B: List[int], C: List[int], D: List[int]) -> int:
        hash_map = collections.defaultdict(int)
        n = 4
        
        def add_hash(lists, i, sum_value):
            if i == n//2:
                hash_map[sum_value] += 1
            else:
                for a in lists[i]:
                    add_hash(lists, i+1, sum_value + a)
            
        def count_compliment(lists, i, complement):
            if i == n:
                return hash_map[complement] if complement in hash_map else 0
            count = 0
            for a in lists[i]:
                count += count_compliment(lists, i + 1, complement - a)
            return count
        
        
        lists = [A,B,C,D]
        add_hash(lists, 0, 0)
        return count_compliment(lists, n//2, 0)
