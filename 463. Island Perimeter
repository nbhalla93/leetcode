class Solution:
    def islandPerimeter(self, grid: List[List[int]]) -> int:
        r = len(grid)
        c = len(grid[0])
        
        self.perimeter = 0
        
        def dfs(i,j,r,c):
            if i < 0 or j < 0. or i >= r or j >= c or grid[i][j] == 0:
                self.perimeter += 1
                return
            
            if grid[i][j] == 2:
                return
            
            grid[i][j] = 2
            dfs(i-1,j,r,c)
            dfs(i+1,j,r,c)
            dfs(i,j-1,r,c)
            dfs(i,j+1,r,c)
            
            
        for i in range(r):
            for j in range(c):
                if grid[i][j] == 1:
                    dfs(i,j,r,c)
                    return self.perimeter
        return 0
        
