class NumMatrix:

    def __init__(self, matrix: List[List[int]]):
        m = len(matrix)
        if m == 0:
            return
        n = len(matrix[0])
        self.storage = [[0]*(n+1) for _ in range(m+1)]
        
        for i in range(m):
            for j in range(n):
                self.storage[i+1][j+1] = self.storage[i][j+1] + self.storage[i+1][j] + matrix[i][j] - self.storage[i][j]
        
    def sumRegion(self, row1: int, col1: int, row2: int, col2: int) -> int:
        return self.storage[row2+1][col2+1] - self.storage[row1][col2+1] - self.storage[row2+1][col1] + self.storage[row1][col1]


# Your NumMatrix object will be instantiated and called as such:
# obj = NumMatrix(matrix)
# param_1 = obj.sumRegion(row1,col1,row2,col2)
